@startuml Diagrama de clases de análisis
class "SesiónDeUsuario" as SU {
    +InicioExitoso() : boolean
}
class "Usuario" as user {
    +nombre : string
    +usuario : string
    -correo : string
    -clave : string

    +IngresarDatosUsuario(string nombre, string usuario, string correo, string clave) : void
    +IngresarDatosUsuario(string usuario, string clave) : void
    +IngresarDatosEvento(string titulo, DataTime fecha_inicio, DataTime fecha_fin, string categoria, string descripcion) : void
}

class "FormularioDeRegistroDeUsuario" as FRU {
    EnviarDatosUsuario(string nombre, string correo, string clave) : void
}

class "GestorDeListaDeUsuarios" as GLU {
    +CrearUsuario(string nombre, string correo, string clave) : Usuario
    +ValidarDatos(): boolean
}

class "FormularioDeInicioDeSesión" as FIS {
    +enviarDatosUsuario(string usuario, string clave) : void
}

class "GestorDeInicioDeSesion" as GIS {
    +VerificarDatos(string usuario, string clave) : void
    +InicioExitoso() : boolean
}

class "Evento" as event {
     +titulo : string
     +fecha_inicio : DataTime
     +fecha_fin : DataTime
     +categoria : string
     +descripcion : string
}

class "Calendario" as Cal {
    ListaDeEventos : List<Eventos> 
    ListaDePublicacion : List<Publicacion> 
    Dia : List<Dia> 
    Meses : List<Meses> 
    Anios : List<Anios>
}

class "Moderador" as mod {
     +IngresarDatosPublicacion(string titulo, DataTime Fecha_Publicaion, string categoria, string descripcion) : void
    +Respuesta() : boolean
}

class "FormularioDeDatosDelEvento" as FDE {
    +EnviarDatosEvento(string titulo, DataTime fecha_inicio, DataTime fecha_fin, string categoria, string descripcion) : void
}

class "GestorDeEventos" as GE {
    +EnviarDatosEvento(string titulo, DataTime fecha_inicio, DataTime fecha_fin, string categoria, string descripcion) : void
    +AgregarAlCalendario(Evento evento) : void
    +PublicarEvento(string titulo, DataTime fecha_inicio, DataTime fecha_fin, string categoria, string descripcion) : Evento  
}

class "SolicitudDeEvento" as SE {
     +EnviarSolicitud() : void
     +Respuesta() : boolean

}
class "GestorDeAprobaciónDeEvento" as GAE {
     +EnviarSolicitud() : void
     +Respuesta(): boolean

}


class "GestorDePublicación" as GP {
   +HacerPublicacion(string titulo, DataTime Fecha_Publicaion, string categoria, string descripcion) : Publicacion
   +AgregarCalendario(Publicacion publicacion) : void
   +EnviarDatosPublicacion(string titulo, DataTime Fecha_Publicaion, string categoria, string descripcion) : void
}

class "FormularioDeDatosDeLaPublicación" as FDP {
    +EnviarDatosPublicacion(string titulo, DataTime Fecha_Publicaion, string categoria, string descripcion) : void
}
class "Profesor" as prof {
     +IngresarDatosPublicacion(string titulo, DataTime Fecha_Publicaion, string categoria, string descripcion) : void
}
class "PersonalDeApoyo" as apoyo {
     +IngresarDatosPublicacion(string titulo, DataTime Fecha_Publicaion, string categoria, string descripcion) : void
}
class "SolicitudDePublicación" as SP {
    EnviarSolicitud() : void
    Respuesta() : boolean
}
class "GestorDeAprobaciónDePublicación" as GAP {
     EnviarSolicitud() : void
     Respuesta() : boolean
}

class "Publicación" as publi

'Registro'
user  --> FRU 
FRU  --> GLU
'Inicio de Sesión'
user --> FIS
FIS --> GIS
GIS --> SU
'Publicar un Evento'
user -left-> FDE
FDE --> GE
GE -down-> event
GE --> Cal
GE --> SE
SE --> GAE
GAE --> mod
user <|- mod
'Hacer una Publicacion'
prof --> FDP
mod --> FDP
apoyo --> FDP
FDP --> GP
GP --> SP
GP --> Cal
GP --> publi
SP --> GAP 
GAP --> mod


user <|-- prof
user <|-- apoyo

@enduml